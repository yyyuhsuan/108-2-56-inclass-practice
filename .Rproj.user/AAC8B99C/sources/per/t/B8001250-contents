---
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.


###5.2 Function
*需求函數  qd=10−5p
```{r}
# p=1.2的需求量
p=1.2
qd <- 10-5*p # 小心是5*p, 不能寫5p
# p=1.3的需求量
p=1.3
qd <- 10-5*p
# p=1.4的需求量
p=1.4
qd <- 10-5*p
```

會變動的步驟：
p=1.2, p=1.3, p=1.4

不會變動的步驟：
qd <- 10-5*p

#函數定義
```{r}
demand <- # 創造一個物件叫demand
  function(p)# 定義這個物件為函數
    {q_d <- 10-5*p # 小心是5*p, 不能寫5p
  }
```

```{r}
# p=1.2的需求量
demand(1.2) 
# p=1.3的需求量
demand(1.3)
# p=1.4的需求量
demand(1.4)
```
#return
```{r}
demand_return <- 
  function(p){
    q_d <- 10-5*p
    return(q_d)
  }
# 印在螢幕，但Global Environment並不會有q_d
demand_return(1.2)
```

最近一步會使用到電腦記憶體的運算值會暫時記在：
```{r}
.Last.value
```

```{r}
# 要長久存在Global Environment要指定物件名稱（不要求與q_d同名）
demand_return(1.2) -> q_d1.2
```

當function有return時,
```{r}
demand_return(1.2) # 相當於
4
```

```{r}
demand_return(1.2) -> q_d1.2 # 相當於
4 -> q_d1.2
```

*return(q_d)只會回傳q_d的「值」但不會回傳整個q_d物件在global environment裡。

*實際上，{...}裡所創造的物件都只是「暫時的」且「不放在global environment」，函數運作完就刪除，所以global environment裡就算有同名物件，也不會因函數運作而被不小心更動。
```{r}
q_d <- 5
demand_return(p=1.2)

print(q_d)
```

*供給函數 qs=0+2p
```{r}
supply <-
  function(p){qs <-0+2*p}
```

##5.2.2 今日天氣
住三峽的小雯問：“Silly，今天天氣如何？”
Silly需要知道什麼：
日期、地點
```{r}
library(lubridate)
dateInput <- today()
locationInput <- "新北市"
```
Silly找答案的策略：

*政府開放資料平台：
參考程式
```{r}
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
  weather_next36hours
```

*給定日期，地點找出預報資訊
參考程式
```{r}
# 找出符合地點的天氣資訊：weatherAtLocation
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location # 可挑出locationInput的「要/不要」向量

weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation

# 在weatherAtLocation找出符合時間的天氣資訊

(weatherAtLocation$elementName=="MaxT") ->
  pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
  pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT

glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
```

打造Silly天氣預報機器人：
```{r}
askSilly_weather <- function(locationInput,dateInput){
  jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
  weather_next36hours
  
  (weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
  
  weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
  (weatherAtLocation$elementName=="MaxT") ->
    pick_MaxT
  (weatherAtLocation$elementName=="MinT") ->
    pick_MinT
  weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
  weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
  
  glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
```

```{r}
askSilly_weather("臺中市")#today()
askSilly_weather("花蓮縣")#today()
```

##5.2.3 函數的組成
```{r}
class(demand_return)
```

```{r}
# 查詢函數formals arguments要求
formals(askSilly_weather)
```

```{r}
# 查詢函數主體
body(askSilly_weather)
```

#函數可以存在list裡
```{r}
learning_topics <- 
  list(
    subject="函數",
    date=lubridate::ymd("2020-06-03"),
    functionsCreated=list(
      demand=demand_return # 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身。
    )
  )
```

```{r}
learning_topics$functionsCreated$demand(1.2)
```
*其實幾乎所有的物件不管什麼class都可以存在list裡，很威吧！

##5.2.4 Environment
```{r}
typeof(demand_return)
```
*function本身的運作並不能只靠它的定義值function(...){...}，還要有適當的環境（environment）條件才能生存。若物件的生存運作需要有適當的環境，表示電腦要存這個物件時還需要包含（enclose）它的（生存）環境一起存。這種儲存型態叫closure（閉包）。
```{r}
# 查詢函數執行所要求環境
environment(demand_return)
```

```{r}
# 若函數執行需要Global environment已存在某些物件，查詢需要哪些物件
codetools::findGlobals(demand_return)
```

```{r}
intercept <- 10
slope <- -5
myDemand <- function(p){
  q_d <- intercept + slope*p
  return(q_d)
}
```

```{r}
environment(demand_return)
environment(myDemand)
```

```{r}
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand) 

# myDemand對Global environment的要求多了intercept及slope
```

```{r}
# 移除global environment裡的intercept及slope
rm(intercept, slope)
```

```{r}
demand_return(1.2) # 維持正常運作
```

```{r}
myDemand(1.2) # 無法運作
```

*myDemand的運作需要global environment裡的intercept, slope物件。這表示

沒有intercept, slope在global environment裡它無法運作。

global environment裡的intercept, slope值若有改變，它的運作結果也會不同。(這種「要運作才去呼叫值」的特性叫Lazy evaluation，惰性求值)
```{r}
intercept <- 10
slope <- -5
myDemand(1.2)
```

```{r}
slope <- -1
myDemand(1.2)
```

```{r}
intercept <- 5
slope <- -1.2
myDemand(1.2)
```

##5.2.5 預設值
*函數lazy evaluation的特性，讓函數的運作：

具有隨時可改變運作狀態的彈性； 但

該工具若落在電腦知識不足的使用者手上會有誤動global environment而產生運作錯誤的危機。
```{r}
myDemand2 <- function(p, intercept=10, slope=-5){
  q_d <- intercept + slope*p
  return(q_d)
}
```

```{r}
environment(myDemand2)
codetools::findGlobals(myDemand2) # 不依靠global env裡的intercept/slope
```

```{r}
myDemand2(1.2)
myDemand2(1.2, slope=-1)
myDemand2(1.2, intercept=5, slope=-1.2)
```
*預設值是「平常不需要動到的彈性arguments」，習慣上定義時最好放在arguments的最後面。

#5.2.6 綜合練習
*以下程式會回傳916公車目前到站預估時間estimatedArrivalTime_916及它的路線route_916（兩者皆設定回傳30筆資料為上限）：
```{r}
library(httr)
library(magrittr)
GET("https://ptx.transportdata.tw/MOTC/v2/Bus/EstimatedTimeOfArrival/City/NewTaipei/916?$top=30&$format=JSON") %>%
  content -> estimatedArrivalTime_916

GET("https://ptx.transportdata.tw/MOTC/v2/Bus/Route/City/NewTaipei/939?$top=30&$format=JSON") %>%
  content -> route_916
```
打造公車到站預報機器人when_busArrives：

```{r}
when_busArrives("916","臺北大學正門")
when_busArrives("939","學勤路")
```

